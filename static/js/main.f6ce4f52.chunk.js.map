{"version":3,"sources":["components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","components/header/index.js","components/header/header.js","services/swapi-service.js","components/spinner/index.js","components/spinner/spinner.js","components/random-planet/random-planet.js","components/random-planet/index.js","components/swapi-service-context/swapi-serwice-context.js","components/row/index.js","components/row/row.js","components/item-details/image-details.js","components/item-details/index.js","components/item-details/item-details.js","components/record/index.js","components/record/record.js","components/hoc/hoc-item-list.js","components/hoc/compose.js","components/hoc/render-function.js","components/hoc/hoc-swapi-service-context.js","components/sw-components/person-details.js","components/sw-components/planet-details.js","components/sw-components/starship-details.js","components/nav-pages/index.js","components/nav-pages/nav-pages.js","components/item-list/item-list.js","components/item-list/index.js","components/sw-components/sw-iltem-lists.js","components/hoc/hoc-swapi-service-router.js","components/pages/people-page.js","components/pages/planets-page.js","components/pages/starship-page.js","components/pages/secret-page.js","components/pages/login-page.js","components/app/index.js","components/app/app.js","index.js"],"names":["ErrorIndicator","err","className","ErrorBoundry","state","hasError","this","setState","props","children","Component","Header","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","SwapiService","getAllPeople","a","page","getData","res","count","desc","results","map","_transformPerson","getPerson","person","getImagePerson","_imageBase","getAllPlanets","_transformPlanet","getPlanet","planet","getImagePlanet","getAllStarships","_transformStarship","getStarship","starship","getImageStarship","_extractId","name","population","rotationPeriod","rotation_period","diameter","climate","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","gender","birthYear","birth_year","eyeColor","eye_color","_apiBase","url","fetch","data","ok","Error","status","json","el","match","Spinner","RandomPlanet","swapiService","loading","isError","errMessage","onPlanetLoaded","onErrorLoading","message","updateView","Math","floor","random","then","catch","interval","setInterval","clearInterval","errorIndicate","spinner","content","defaultProps","PlanetView","Fragment","src","alt","React","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","Row","leftContent","rightContent","ImageDetails","fallback","loadImage","prevProps","image","onError","itemDetails","item","error","itemId","getImageUrl","updateItem","Children","child","cloneElement","Record","field","label","HocItemList","View","laoding","numPage","update","compose","functions","comp","reduceRight","wrapped","f","RenderFunction","renderFunction","Wrapped","HocSwapiServiceContext","mapMethodsToProps","serviceProps","NavPages","pageCount","path","countPages","lists","i","push","key","navItem","ItemList","changePage","activeDetailId","showDetail","useState","setPageCount","useEffect","tempCount","isActive","onClick","listGroup","renderName","PersonList","Compose","PlanetList","StarshipList","HocSwapiSeviceRouter","detailId","split","changePageTo","newId","history","changeDetail","params","withRouter","SecretPage","isLoggedIn","LoginPage","onLogin","App","value","render","exact","component","PeoplePage","PlanetPage","StarshipPage","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.f6ce4f52.chunk.js","sourcesContent":["import ErrorIndicator from './error-indicator.js';\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = ({ err }) => {\r\n\r\n  return (\r\n    <div className=\"error-indicator\">\r\n    \t<h3>BOOM!</h3>\r\n    \t<p>somethimg has gone terribly wrong</p>\r\n    \t<p>Error: {err}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorIndicator;","import ErrorBoundry from './error-boundry.js';\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n   state = {\r\n   \thasError:false\r\n   }\r\n\r\n   componentDidCath() {\r\n\r\n   \t\tthis.setState({ \r\n   \t\t\thasError:true\r\n   \t\t});\r\n   }\r\n\r\n    render() {       \r\n\r\n    \tif (this.state.hasError) {\r\n    \t\treturn <ErrorIndicator />\r\n    \t};\r\n\r\n    \treturn this.props.children;  \r\n    }\r\n}","import Header from './header.js';\r\nexport default Header;","import React from 'react';\r\nimport './header.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    \r\n    \t<nav className=\"navbar navbar-expand-lg navbar-light pb-0 rounded d-flex\">\r\n\t\t  <h1 className=\"header-title\">\r\n\t\t  \t<NavLink to='/'>Star DB</NavLink>\r\n\t\t  </h1>\r\n\t\t  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\" aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n\t\t    <span className=\"navbar-toggler-icon\"></span>\r\n\t\t  </button>\r\n\r\n\t\t  <div className=\"collapse navbar-collapse\" id=\"navbarColor03\">\r\n\t\t    <ul className=\"header-navbar-nav\">\r\n\t\t      <li className=\"nav-item\">\r\n\t\t        <NavLink className=\"nav-link\" to='/people/'>People</NavLink>\r\n\t\t      </li>\r\n\t\t      <li className=\"nav-item\">\r\n\t\t        <NavLink className=\"nav-link\" to='/planets/'>Planets</NavLink>\r\n\t\t      </li>\r\n\t\t      <li className=\"nav-item\">\r\n\t\t        <NavLink className=\"nav-link\" to='/starships/'>Starships</NavLink>\r\n\t\t      </li>\r\n\t\t      <li className=\"nav-item\">\r\n\t\t        <NavLink className=\"nav-link\" to='/login/'>Login</NavLink>\r\n\t\t      </li>\r\n\t\t      <li className=\"nav-item\">\r\n\t\t        <NavLink className=\"nav-link\" to='/secret/'>Secret</NavLink>\r\n\t\t      </li>\t      \r\n\t\t    </ul>\t\t    \r\n\t\t  </div>\r\n\t\t</nav>\r\n  )\r\n}\r\n\r\nexport default Header;","export default class SwapiService {\r\n\r\n\tconstructor() {\r\n\t\tthis._apiBase = 'https://swapi.dev/api';\r\n\t\tthis._imageBase = `https://starwars-visualguide.com/assets/img`;\r\n\t};\r\n\t \r\n\tasync getData(url) {\r\n\r\n\t\tconst data = await fetch(`${this._apiBase}${url}`);\r\n\r\n\t\tif (!data.ok) {\r\n\t\t\tthrow new Error (`Could not fetch: ${this._apiBase}${url}, received: ${data.status}`);\t\t\t\t\r\n\t\t}\r\n\r\n\t\treturn data.json();\r\n\t}\r\n\t\r\n\tgetAllPeople = async (page=1) => {\r\n\t\tconst res = await this.getData(`/people/?page=${page}`);\r\n\t\treturn {\r\n\t\t\tcount: res.count,\r\n\t\t\tdesc: res.results.map(this._transformPerson)\r\n\t\t};\r\n\t}\r\n\r\n\tgetPerson = async (id) => {\r\n\t\tconst person = await this.getData(`/people/${id}/`);\r\n\t\treturn this._transformPerson(person);\r\n\t}\r\n\r\n\tgetImagePerson = (id) => {\r\n\t\treturn `${this._imageBase}/characters/${id}.jpg`\r\n\t}\r\n\r\n\tgetAllPlanets = async (page=1) => {\r\n\t\tconst res = await this.getData(`/planets/?page=${page}`);\r\n\t\treturn {\r\n\t\t\tcount: res.count,\r\n\t\t\tdesc: res.results.map(this._transformPlanet)\r\n\t\t};\r\n\t}\r\n\r\n\tgetPlanet = async (id) => {\r\n\t\tconst planet= await this.getData(`/planets/${id}/`);\r\n\t\treturn this._transformPlanet(planet);\r\n\t}\r\n\r\n\tgetImagePlanet = (id) => {\t\t\r\n\t\treturn `${this._imageBase}/planets/${id}.jpg`;\r\n\t}\r\n\r\n\tgetAllStarships = async (page=1) => {\r\n\t\tconst res = await this.getData(`/starships/?page=${page}`);\r\n\t\treturn {\r\n\t\t\tcount: res.count,\r\n\t\t\tdesc: res.results.map(this._transformStarship)\r\n\t\t};\r\n\t}\r\n\r\n\tgetStarship = async (id) => {\r\n\t\tconst starship = await this.getData(`/starships/${id}/`);\r\n\t\treturn this._transformStarship(starship);\r\n\t}\r\n\r\n\tgetImageStarship = (id) => {\r\n\t\treturn `${this._imageBase}/starships/${id}.jpg`\r\n\t}\r\n\r\n\t_extractId(el) {\r\n\t\tconst idRegExp = /\\/([0-9]*)\\/$/;\r\n\t\treturn el.url.match(idRegExp)[1];\r\n\t}\r\n\r\n\t_transformPlanet = (planet) => {\r\n\t\treturn {\r\n\t\t\tid:this._extractId(planet),\r\n\t\t\tname:planet.name,\r\n\t\t\tpopulation: planet.population,\r\n\t\t\trotationPeriod: planet.rotation_period,\r\n\t\t\tdiameter: planet.diameter,\r\n\t\t\tclimate:planet.climate\r\n\t\t}\r\n\t}\r\n\r\n\t_transformStarship = (starship) => {\r\n\t\treturn {\r\n\t\t\tid: this._extractId(starship),\r\n\t\t\tname: starship.name,\r\n\t\t\tmodel: starship.model,\r\n\t\t\tmanufacturer: starship.manufacturer,\r\n\t\t\tcostInCredits: starship.costInCredits,\r\n\t\t\tlength: starship.length,\r\n\t\t\tcrew: starship.crew,\r\n\t\t\tpassengers: starship.passengers,\r\n\t\t\tcargoCapacity: starship.cargoCapacity\r\n\t\t}\r\n\t}\r\n\r\n\t_transformPerson = (person) => {\r\n\t\treturn {\r\n\t\t\tid:this._extractId(person),\r\n\t\t\tname:person.name,\r\n\t\t\tgender: person.gender,\r\n\t\t\tbirthYear: person.birth_year,\r\n\t\t\teyeColor: person.eye_color\r\n\t\t}\r\n\t}\r\n}","import Spinner from './spinner.js';\r\nexport default Spinner;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = ({ className }) => {\r\n    return (\r\n        <div className=\"lds-css ng-scope\">\r\n        \t<div className=\"lds-double-ring\">\r\n\t        \t<div></div>\r\n\t        \t<div></div>\r\n        \t</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","import React, { Component}  from 'react';\r\nimport PropType  from 'prop-types';\r\nimport SwapiService from '../../services/swapi-service.js';\r\nimport Spinner from '../spinner';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nimport './random-planet.css';\r\n\r\nexport default class RandomPlanet extends Component {\r\n\r\n\tstatic defaultProps = {\r\n\t\tinterval: 60000\r\n\t};\r\n\r\n\tstatic propTypes = {\r\n\t\tinterval: PropType.number\r\n\t}\r\n\r\n\tswapiService = new SwapiService();\r\n\r\n\tstate = {\r\n\t\tplanet:{},\r\n\t\tloading:true,\r\n\t\tisError:false,\r\n\t\terrMessage:''\r\n\t};\t\t\r\n\r\n\tonPlanetLoaded = (planet) => {\r\n\t\tthis.setState({\r\n\t\t\tplanet,\r\n\t\t\tloading:false\r\n\t\t});\r\n\t};\r\n\r\n\tonErrorLoading = (err) => {\r\n\r\n\t\tthis.setState({\r\n\t\t\tloading:false,\r\n\t\t\tisError:true,\r\n\t\t\terrMessage: err.message\r\n\t\t});\r\n\t};\r\n\r\n\tupdateView =() => {\r\n\t\tconst id = Math.floor(Math.random()*18) + 2;\r\n\t\t\r\n\t\tthis.swapiService.getPlanet(id)\r\n\t\t\t.then(this.onPlanetLoaded)\r\n\t\t\t.catch(this.onErrorLoading);\t\t\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\r\n\t\tconst { interval } = this.props;\r\n\t\tthis.updateView();\r\n\t\tthis.interval = setInterval(this.updateView,interval);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.interval);\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst { planet, loading, errMessage, isError } = this.state;\r\n\r\n\t\tconst errorIndicate = isError ? <ErrorIndicator err={errMessage} /> : null;\r\n\t\tconst spinner = loading ? <Spinner /> : null;\r\n\t\tconst content = !(loading || isError) ? <PlanetView planet={planet} /> : null;\t\t\r\n\r\n\t\treturn (\r\n\t\t    <div className=\"d-flex flex-wrap bg-light mt-3 mb-5 p-3 rounded random-planet\">  \r\n\t\t\t    {spinner}\r\n\t\t\t    {content}\r\n\t\t\t    {errorIndicate}\r\n\t\t    </div>\r\n\t\t);\r\n\t};\t\r\n};\r\n\r\nconst PlanetView = ({ planet }) => {\r\n\r\n\tconst { id, name, population, rotationPeriod, diameter } = planet;\r\n\r\n\treturn (\r\n\r\n\t\t<React.Fragment>\r\n\r\n\t\t\t<img className=\"random-planet-image img-thumbnail rounded\" src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} alt=\"\"/>\t   \r\n\t    \t\r\n\t    \t<div className=\"random-planet-property m-3 ml-sm-5\">\r\n\t    \t\t<h3> {name}</h3>\r\n\t    \t\t<ul className=\"list-group list-group-flush\">\r\n\t\t    \t\t<li className=\"list-group-item\">Population {population}</li>\r\n\t\t    \t\t<li className=\"list-group-item\">Rotation period  {rotationPeriod}</li>\r\n\t\t    \t\t<li className=\"list-group-item\">Diameter {diameter}</li>\r\n\t    \t\t</ul>\r\n\t    \t</div>\r\n\r\n\t\t</React.Fragment>\t\t\r\n\t);\r\n};","import RandomPlanet from './random-planet.js';\r\nexport default RandomPlanet;","import React from 'react';\r\n\r\nconst {\r\n\tProvider:SwapiServiceProvider,\r\n\tConsumer:SwapiServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n\tSwapiServiceProvider,\r\n\tSwapiServiceConsumer\r\n}","import Row from './row.js';\r\nexport default Row;","import React from 'react';\r\nimport ErrorBoundry from '../error-boundry';\r\n\r\nconst Row =({ leftContent, rightContent }) => {\r\n\r\n    return (\r\n\r\n        <div className=\"row\">\r\n            <ErrorBoundry>\r\n                <div className=\"col-lg-6 mb-3\">\r\n                    {leftContent}\r\n                </div>\r\n            </ErrorBoundry>\r\n\r\n            <ErrorBoundry>\r\n                <div className=\"col-lg-6\">\r\n                    {rightContent}\r\n                </div>\r\n            </ErrorBoundry>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Row;","import React, { Component } from 'react';\r\nimport './item-details.css';\r\n\r\nexport default class ImageDetails extends Component {\r\n\r\n\tstate = {\r\n\t\tisError: false\t\t\r\n\t}\r\n\r\n\tfallback = ()=> {\r\n\r\n\t\tthis.setState({\r\n\t\t\tisError:true\r\n\t\t})\r\n\t}\r\n\tloadImage = () => {\r\n\r\n\t\tthis.setState({\r\n\t\t\tisError:false,\t\t\t\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\r\n        if( this.props.image !== prevProps.image) \r\n\r\n            this.loadImage();\r\n    }\r\n\r\n\trender() {\r\n\r\n\t\tif ( this.state.isError ) {\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"item-detail-image item-detail-error-img rounded\"> {\"Sorry, \\n no foto \\n in the database\"}</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<img className=\"item-detail-image rounded\" src={this.props.image} onError={this.fallback} alt=''/>\r\n\t\t)\r\n\t}\r\n}","import itemDetails from './item-details.js';\r\nexport default itemDetails;","import React, { Component } from 'react';\r\nimport Spinner from '../spinner';\r\nimport ErrorIndicator from '../error-indicator/';\r\nimport ImageDetails from './image-details.js';\r\nimport './item-details.css';\r\n\r\nexport default class itemDetails extends Component {\r\n    \r\n    state = {\r\n        item:null,\r\n        image:null,\r\n        // loading:true,\r\n        error:false\r\n    }\r\n    updateItem() {\r\n\r\n        const { itemId, getData, getImageUrl } = this.props;\r\n\r\n        this.setState({\r\n            // loading:true,\r\n            error:false\r\n        });\r\n\r\n        if (itemId) {\r\n\r\n            getData(itemId)\r\n            .then((item) => {\r\n                this.setState({ \r\n                    item,\r\n                    loading:false,\r\n                    image:getImageUrl(itemId)\r\n                });                \r\n            })\r\n            .catch(()=>{\r\n                this.setState({\r\n                    // loading:false,                   \r\n                    error:true\r\n                });\r\n            });\r\n        }            \r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.updateItem();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        if( this.props.itemId != prevProps.itemId) \r\n\r\n            this.updateItem();\r\n    }\r\n\r\n    render() {\r\n\r\n        const { item, image, loading, error } = this.state;\r\n\r\n        if (error) {\r\n            return <ErrorIndicator />\r\n        }\r\n\r\n        if(!item) {\r\n            return <Spinner />\r\n        }\r\n\r\n        const { name } = item;\r\n\r\n        return (       \r\n\r\n            <div className=\"d-flex flex-wrap bg-light p-3 rounded\">\r\n                \r\n                <ImageDetails image={image} />      \r\n                \r\n                <div className=\"item-detail-property m-3\">\r\n                    <h3 className=\"item-detail-name\">{name}</h3>\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        { \r\n                            React.Children.map(this.props.children, (child)=>{\r\n                                \r\n                                return React.cloneElement(child, {item})\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import Record from './record.js';\r\nexport default Record;","import React from 'react';\r\n\r\nconst Record = ({ item, field, label }) => {\r\n\treturn (\r\n\t\t<li className=\"list-group-item\">{label} {item[field]}</li>\r\n\t);\r\n}\r\n\r\nexport default Record;","import React, {Component} from 'react';\r\nimport Spinner from '../spinner/';\r\nimport ErrorIndicator from '../error-indicator/';\r\n\r\nconst HocItemList = (View) => {\r\n\r\n\treturn class  extends Component {\r\n\t\t\r\n\t\tstate = {\r\n\t\t\tdata:null,\r\n\t\t\tloading:true,\r\n\t\t\terror:false\r\n\t\t}\t\t\r\n\r\n\t\tupdate() {\r\n\t\t\tthis.setState({ \r\n\t\t\t\tlaoding:true,\r\n\t\t\t\terror:false\r\n\t\t\t});\r\n\r\n\t\t\tif (this.props.numPage) {\r\n\t\t\t\tthis.props.getData(this.props.numPage)\t\t\t\r\n\t\t\t\t.then((data) => {\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({ \r\n\t\t\t\t\t\tdata,\r\n\t\t\t\t\t\tloading:false,\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch(()=>{\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tloading:false,\r\n\t\t\t\t\t\terror:true\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\r\n\t\tcomponentDidUpdate(prevProps) {\r\n\t\t\t\r\n\t\t\tif (this.props.numPage != prevProps.numPage) {\r\n\t\t\t\tthis.update();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcomponentDidMount() {\r\n\t\t\tthis.update();\t\t\t\r\n\t\t}\r\n\r\n\t\trender() {\r\n\r\n\t\t\tconst { data, loading, error } = this.state;\r\n\t\t\tif (loading) {\r\n\t\t\t\t\r\n\t\t\t\treturn <Spinner />\r\n\t\t\t}\r\n\r\n\t\t\tif (error) {\r\n\r\n\t\t\t\treturn <ErrorIndicator />\r\n\t\t\t}\r\n\r\n\t\t\treturn <View {...this.props} data={data} />\t\t\t\r\n\t\t}\t\r\n\t}\r\n}\r\n\r\nexport default HocItemList; ","const compose = (...functions) => (comp) => {\r\n\r\n\treturn functions.reduceRight(\r\n\t\t(wrapped,f) => f(wrapped), comp);\r\n}\r\n\r\nexport default compose;","import React from 'react';\r\n\r\nconst RenderFunction = (renderFunction) => (Wrapped) => {\r\n\r\n\treturn (props) => {\r\n\t\treturn (\r\n\t\t\t<Wrapped {...props}>\r\n\t\t\t\t{renderFunction}\r\n\t\t\t</Wrapped>\r\n\t\t)\r\n\t}\t\r\n}\r\nexport default RenderFunction;","import React from 'react';\r\nimport {SwapiServiceConsumer} from '../swapi-service-context/';\r\n\r\nconst HocSwapiServiceContext = (mapMethodsToProps) => (Wrapped) => {\r\n\r\n\treturn (props)=> {\r\n\r\n\t\treturn (\r\n\t\t\t<SwapiServiceConsumer>\r\n\t\t\t\t{\r\n\t\t\t\t\t(swapiService) => {\r\n\r\n\t\t\t\t\t\tconst serviceProps = mapMethodsToProps(swapiService);\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Wrapped {...props} {...serviceProps} />\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t</SwapiServiceConsumer>\r\n\t\t);\r\n\t}\t\r\n}\r\n\r\nexport default HocSwapiServiceContext;","import React from 'react';\r\nimport ItemDetails from '../item-details/';\r\nimport Record from '../record/';\r\nimport {HocSwapiServiceContext} from '../hoc/';\r\n\r\nconst PersonDetails = (props) => {\r\n\r\n\treturn (\r\n\t\t<ItemDetails {...props}>\r\n\t        <Record label='Gender' field='gender'/>\r\n\t        <Record label='Years' field='birthYear'/>\r\n\t        <Record label='Eye color' field='eyeColor'/>\r\n\t    </ItemDetails>\r\n\t)\r\n}\r\n\r\nconst mapMethodsToProps = (swapiService) => {\r\n\r\n\treturn {\r\n\t\tgetData:swapiService.getPerson,\r\n\t\tgetImageUrl:swapiService.getImagePerson\r\n\t}\r\n}\r\n// PersonDetails.defaultProps = {\r\n// \titemId:1\r\n// }\r\nexport default HocSwapiServiceContext(mapMethodsToProps)(PersonDetails);","import React from 'react';\r\nimport ItemDetails from '../item-details';\r\nimport Record from '../record';\r\nimport {HocSwapiServiceContext} from '../hoc/';\r\n\r\nconst PlanetDetails = (props) => {\r\n\r\n\treturn (\r\n\t\t<ItemDetails {...props}>\t        \r\n\t        <Record label='Diameter:' field='diameter'/>\r\n\t        <Record label='Population:' field='population'/>\r\n\t        <Record label='Climate:' field='climate'/>\r\n\t    </ItemDetails>\r\n\t)\r\n}\r\n\r\nconst mapMethodsToProps = (swapiService) => {\r\n\r\n\treturn {\r\n\t\tgetData:swapiService.getPlanet,\r\n\t\tgetImageUrl:swapiService.getImagePlanet\r\n\t}\r\n}\r\n// PlanetDetails.defaultProps = {\r\n// \titemId:1\r\n// }\r\nexport default HocSwapiServiceContext(mapMethodsToProps)(PlanetDetails);","import React from 'react';\r\nimport ItemDetails from '../item-details';\r\nimport Record from '../record';\r\nimport {HocSwapiServiceContext} from '../hoc';\r\n\r\nconst StarshipDetails = (props) => {\r\n\r\n\treturn (\r\n\t\t<ItemDetails {...props}>\t        \r\n\t        <Record label='Crew' field='crew'/>\r\n\t        <Record label='Passengers' field='passengers'/>\t        \r\n\t    </ItemDetails>\r\n\t)\r\n}\r\n\r\nconst mapMethodsToProps = (swapiService) => {\r\n\r\n\treturn {\r\n\t\tgetData:swapiService.getStarship,\r\n\t\tgetImageUrl:swapiService.getImageStarship\r\n\t}\r\n}\r\n// StarshipDetails.defaultProps ={\r\n// \titemId:2\r\n// }\r\nexport default HocSwapiServiceContext(mapMethodsToProps)(StarshipDetails);","import NavPages from './nav-pages.js';\r\nexport default NavPages;","import React from 'react';\r\nimport './nav-pages.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NavPages = (props) => {\r\n\r\n\tconst { pageCount, path } = props;\r\n\r\n\tconst navItem = ( countPages ) => {\r\n\r\n\t\tlet lists =[];\r\n\r\n\t\tfor ( let i=1; i <= countPages; i++) {\r\n\r\n\t\t\tlists.push(\r\n\r\n\t\t\t\t<li key={i} className=\"nav-item\">\r\n\t\t\t\t\t<NavLink className=\"nav-link\" to={`/${path}/page_${i}/`} >{i}</NavLink>\r\n\t\t\t\t</li>\r\n\t\t\t)\t\t\t\r\n\t\t}\r\n\r\n\t\treturn lists;\t\t\r\n\t}\r\n\r\n\treturn (    \r\n\t    \t\r\n\t\t<div>\r\n\t\t\t<p className=\"title\">Page:</p>\r\n\t\t\t<ul className=\"pages-navbar-nav\">\r\n\t\t\t\t{ navItem(pageCount) }  \r\n\t\t\t</ul>\t\r\n\t\t</div>    \r\n\t\t\t  \r\n\t)\r\n}\r\n\r\nexport default NavPages;","import React, {useEffect, useState} from 'react';\r\nimport PropType  from 'prop-types';\r\nimport NavPages from '../nav-pages/';\r\n\r\nimport './item-list.css';\r\n\r\nconst ItemList = (props)=> {\t\t\t\r\n\r\n\tconst { data: {desc, count}, changePage, id : activeDetailId, showDetail, path } = props;\r\n\r\n\tconst [pageCount, setPageCount] = useState(0);\r\n\r\n\tuseEffect (()=> {\r\n\t\t\r\n\t\tlet tempCount = count/10;\r\n\t\tif(count % 10) {\r\n\t\t\t++tempCount;\r\n\t\t}\r\n\t\tsetPageCount(tempCount);\r\n\r\n\t},[count]);\r\n\r\n\tuseEffect (()=> {\r\n\t\tshowDetail(desc[0].id);\r\n\t},[desc]);\r\n\r\n\tconst listGroup = ( data, activeDetailId ) => {\t\r\n\r\n\t\treturn data.map((item) => {\r\n\r\n\t\t\tconst { id } = item;\t\r\n\t\t\tconst label = props.children(item);\r\n\r\n\t\t\tlet isActive = (activeDetailId == id) ? true : false;\r\n\r\n\t\t\treturn (\r\n\r\n\t\t\t\t<li key={id} \r\n\t\t\t\t\tclassName={\"item-list list-group-item list-group-item-action\" + (isActive ? \" active\" : \"\")}\r\n\t\t\t\t\tonClick={()=> showDetail(id)} >\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t});\t\t\r\n\t}\r\n\r\n\treturn (\r\n\r\n\t\t<div>\t\t\t\r\n\t\t\t<ul className=\"list-item list-group list-group-item-action\">\r\n\t\t\t\t{listGroup(desc, activeDetailId)}\r\n\t\t\t</ul>\r\n\t\t\t\r\n\t\t\t<NavPages pageCount={pageCount}\r\n\t\t\t\t\t\tpath={path}\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t  \r\n\t\t\t\t\t\tchangePage = {changePage} />\r\n\t\t</div>\r\n\t)\t\r\n};\r\n\r\nItemList.defaultProps = {\r\n\tshowDetail: () => {},\r\n\tdesc:[{}]\r\n}\r\nItemList.propTypes = {\r\n\tshowDetail:PropType.func,\r\n\tdesc: PropType.arrayOf(PropType.object).isRequired,\r\n\tchildren:PropType.func.isRequired\r\n}\r\nexport default ItemList;","import ItemList from './item-list.js';\r\nexport default ItemList;","import ItemList from '../item-list';\r\nimport { HocItemList, HocSwapiServiceContext, Compose, RenderFunction } from '../hoc/';\r\n\r\nconst renderName = ({ name })=> name;\r\n\r\nconst mapPersonsMethodsToProps = (swapiService) => {\t\r\n\treturn {\r\n\t\tgetData: swapiService.getAllPeople\r\n\t};\r\n}\r\n\r\nconst mapPlanetsMethodsToProps = (swapiService) => {\r\n\treturn {\r\n\t\tgetData: swapiService.getAllPlanets\r\n\t};\r\n}\r\n\r\nconst mapStarshipsMethodsToProps = (swapiService) => {\r\n\treturn {\r\n\t\tgetData: swapiService.getAllStarships\r\n\t};\r\n}\r\n\r\nconst PersonList = Compose(\r\n\t\t\t\t\t\tHocSwapiServiceContext(mapPersonsMethodsToProps),\r\n\t\t\t\t\t\tHocItemList,\r\n\t\t\t\t\t\tRenderFunction(renderName)\r\n\t\t\t\t\t)(ItemList);\r\n\r\nconst PlanetList = Compose(\r\n\t\t\t\t\t\tHocSwapiServiceContext(mapPlanetsMethodsToProps),\r\n\t\t\t\t\t\tHocItemList,\r\n\t\t\t\t\t\tRenderFunction(renderName)\r\n\t\t\t\t\t)(ItemList);\r\n\r\nconst StarshipList = Compose(\r\n\t\t\t\t\t\tHocSwapiServiceContext(mapStarshipsMethodsToProps),\r\n\t\t\t\t\t\tHocItemList,\r\n\t\t\t\t\t\tRenderFunction(renderName)\r\n\t\t\t\t\t)(ItemList);\r\n\r\n\r\nexport {\r\n\tPersonList,\r\n\tPlanetList,\r\n\tStarshipList\r\n}","import React, {Component} from 'react';\r\n\r\nconst HocSwapiSeviceRouter = (View) => {\r\n\r\n\treturn class  extends Component {\r\n\t\t\r\n\t\tstate ={\r\n\t\t\tnumPage: null,\r\n\t\t\tdetailId: null\r\n\t\t\t// numPage: this.props.match.params.page ? this.props.match.params.page.split(\"page_\")[1] : 1,\r\n\t\t\t// detailId: this.props.match.params.id\r\n\t\t}\r\n\r\n\t\tpath = this.props.match.path ? this.props.match.path.split(\"/\")[1] : \"\";\r\n\t\t\r\n\t\tchangePageTo = (newId)=> {\r\n\t\t\treturn ()=> {\r\n\t\t\t\tthis.props.history.push( `/${this.path}/page_${newId}/`)\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tnumPage:newId\r\n\t\t\t\t})\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t\t\t\t\t\r\n\t\tchangeDetail = (id)=> {\r\n\t\t\tthis.props.history.push(`/${this.path}/${this.props.match.params.page}/${id}`  );\r\n\t\t\tthis.setState({\r\n\t\t\t\tdetailId:id\r\n\t\t\t})\t\t\t\r\n\t\t}\r\n\r\n\t\tcomponentDidMount() {\r\n\t\t\tif(!this.props.match.params.page) {\r\n\t\t\t\tthis.props.history.push( `page_1/1`);\r\n\t\t\t\t\r\n\t\t\t} else {\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tnumPage:this.props.match.params.page.split(\"page_\")[1],\r\n\t\t\t\t\tdetailId: this.props.match.params.id\r\n\t\t\t\t})\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\r\n\t\tcomponentDidUpdate(prevProps) {\r\n\t\t\t\r\n\t\t\tif (this.props.match.params.page != prevProps.match.params.page) {\r\n\t\t\t\t\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tnumPage:this.props.match.params.page.split(\"page_\")[1]\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tif (this.props.match.params.id != prevProps.match.params.id) {\r\n\t\t\t\t\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tdetailId:this.props.match.params.id\r\n\t\t\t\t\t})\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\trender () {\r\n\t\t\treturn <View \r\n\t\t\t\t\t\t\tchangeDetail ={this.changeDetail} \r\n\t\t\t\t\t\t\tnumPage = {this.state.numPage} \r\n\t\t\t\t\t\t\tid = {this.props.match.params.id} \r\n\t\t\t\t\t\t\tpath = {this.path} \r\n\t\t\t\t\t\t\tchangePageTo = {this.changePageTo} \r\n\t\t\t\t\t\t\tdetailId = {this.state.detailId} />\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default HocSwapiSeviceRouter;","import React from 'react';\r\nimport Row from '../row';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { PersonList,PersonDetails } from '../sw-components/';\r\nimport HocSwapiSeviceRouter from '../hoc/hoc-swapi-service-router';\r\n\r\n// const PeoplePage =({ history,  match }) => {\r\n\r\n// \tconst { page, id } = match.params;\r\n// \tconsole.log(props)\r\n\r\n// \tconsole.log(\" page: \"+page+\"; id: \"+id);\r\n// \tconst [numPage, setNumPage] = useState( page ? page.split(\"page_\")[1] : 1);\r\n// \tconst [detailId, setDetailId] = useState( id );\r\n// \tconst path = match.path ? match.path.split(\"/\")[1] : \"\";\r\n\r\n// \tconst changePageTo = (newId)=> {\r\n// \t\treturn ()=> {\r\n// \t\t\thistory.push( `/${path}/page_${newId}/`)\r\n// \t\t\tsetNumPage(newId);\r\n// \t\t}\t\t\r\n// \t}\r\n\t\r\n// \tconst changeDetail = (id)=> {\r\n// \t\thistory.push( id );\r\n// \t\tsetDetailId(id)\r\n// \t\tconsole.log(\"changeDetail \"+id)\r\n// \t}\r\n\r\n// \tuseEffect(()=> {\r\n// \t\tif(!page) {\r\n// \t\t\thistory.push( `page_1/1`);\r\n// \t\t\tconsole.log(\"history.push\")\r\n// \t\t} else {\r\n// \t\t\tconst numPage = page.split(\"page_\")[1];\r\n// \t\t\tsetNumPage(numPage);\r\n\t\t\t\r\n// \t\t\tconsole.log(\"useEffect\")\r\n// \t\t}\r\n// \t},[page]);\r\n\r\n// \tuseEffect(()=> {\r\n// \t\tif(id) {\r\n// \t\t\tsetDetailId(id);\r\n// \t\t\tconsole.log(\"setId\")\r\n// \t\t}\r\n// \t},[id]);\r\n\r\n// \tconsole.log(match)\r\n\r\n// \tconsole.log(\"-------------------------------------------------------\")\r\n\r\n// \treturn (\r\n// \t\t<div>\r\n// \t\t\t<Row \tleftContent={ <PersonList \tshowDetail={ changeDetail  }\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tnumPage ={numPage}\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tid={id}\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tpath={path}\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tchangePage={changePageTo}/> }\r\n// \t\t\t\t\trightContent={ <PersonDetails itemId={detailId} /> } />\t\t\t\r\n// \t\t</div>\r\n// \t);\r\n// }\r\n// export default withRouter(PeoplePage);\r\n\r\nconst PeoplePage =({changeDetail, numPage, id, path, changePageTo, detailId}) => {\t\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Row \tleftContent={ <PersonList \tshowDetail={ changeDetail  }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnumPage ={numPage}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpath={path}\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangePage={changePageTo}/> }\r\n\t\t\t\t\trightContent={ <PersonDetails itemId={detailId} /> } />\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default withRouter(HocSwapiSeviceRouter(PeoplePage));","import React from 'react';\r\nimport Row from '../row';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { PlanetList,PlanetDetails } from '../sw-components/';\r\nimport HocSwapiSeviceRouter from '../hoc/hoc-swapi-service-router';\r\n\r\n// const PlanetPage = ({ history, match }) => {\r\n\r\n//     const { id } = match.params;\r\n\r\n// \treturn (\r\n\r\n// \t\t<Row leftContent={ <PlanetList showDetail={ (id) => { history.push(id) } } /> } \r\n// \t\t\t\t\t\t rightContent={ <PlanetDetails itemId={id} /> } />\r\n// \t);\r\n// }\r\n// export default withRouter(PlanetPage);\r\n\r\nconst PlanetPage =({changeDetail, numPage, id, path, changePageTo, detailId}) => {\t\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Row \tleftContent={ <PlanetList \tshowDetail={ changeDetail  }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnumPage ={numPage}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpath={path}\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangePage={changePageTo}/> }\r\n\t\t\t\t\trightContent={ <PlanetDetails itemId={detailId} /> } />\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default withRouter(HocSwapiSeviceRouter(PlanetPage));","import React from 'react';\r\nimport Row from '../row';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { StarshipList,StarshipDetails } from '../sw-components';\r\nimport HocSwapiSeviceRouter from '../hoc/hoc-swapi-service-router';\r\n\r\n// const StarshipPage = ({ history, match }) => {\r\n\r\n//     const { id } = match.params;\r\n\r\n// \treturn (\r\n\r\n// \t\t<Row leftContent={ <StarshipList showDetail={ (id) => history.push(id) }/> } \r\n// \t\t\t\t\t\t rightContent={ <StarshipDetails itemId={id}/> } />\r\n// \t);    \r\n// }\r\n// export default withRouter(StarshipPage);\r\nconst StarshipPage =({changeDetail, numPage, id, path, changePageTo, detailId}) => {\t\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Row \tleftContent={ <StarshipList \tshowDetail={ changeDetail  }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnumPage ={numPage}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpath={path}\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangePage={changePageTo}/> }\r\n\t\t\t\t\trightContent={ <StarshipDetails itemId={detailId} /> } />\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default withRouter(HocSwapiSeviceRouter(StarshipPage));","import React from 'react';\r\n// import { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst SecretPage = ({ isLoggedIn }) => {\r\n\t\r\n\tif (isLoggedIn) {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"jumbotron text-center\">\r\n\t\t\t\t<h3>Welcome to Secret Page!!!</h3>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\t// return <Redirect to ='/login' />\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h3 className=\"text-center\"><p>Page in developing</p></h3>\r\n\t\t\t<h4 className=\"text-center text-monospace text-danger\">You should not see this!!!</h4>\r\n\t\t</div>\r\n\t) \r\n}\r\n\r\nexport default SecretPage;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst LoginPage = ({ isLoggedIn, onLogin }) => {\r\n\r\n\tif (isLoggedIn) {\r\n\t\treturn <Redirect to='' />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"jumbotron text-center\">\r\n\t\t\t<h3>Page in developing</h3>\r\n\t\t\t<p>Login to secret page</p>\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"btn btn-success\"\r\n\t\t\t\t// onClick={onLogin}\r\n\t\t\t\t>\r\n\t\t\t\tLogin\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default LoginPage;","import App from './app.js';\r\nexport default App;","import React, { Component } from 'react';\r\nimport ErrorBoundry from '../error-boundry/';\r\nimport Header from '../header/';\r\nimport RandomPlanet from '../random-planet/';\r\nimport { SwapiServiceProvider } from '../swapi-service-context/';\r\nimport SwapiService from '../../services/swapi-service.js';\r\n\r\n// import { StarshipDetails } from '../sw-components/';\r\n\r\nimport { PeoplePage, PlanetPage, StarshipPage, LoginPage, SecretPage } from '../pages/';\r\n\r\nimport './app.css';\r\n\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nexport default class App extends Component {\r\n\r\n    swapiService = new SwapiService();\r\n\r\n    state = {\r\n    \tisLoggedIn:false\r\n    }\r\n\r\n    onLogin = () => {\r\n\r\n    \tthis.setState({\r\n    \t\tisLoggedIn:true\r\n    \t})\r\n    }\r\n\r\n\trender() {\r\n\r\n\t\tconst { isLoggedIn } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<ErrorBoundry>\r\n\t\t\t\t<SwapiServiceProvider value={this.swapiService}>\r\n\t\t\t\t\t<Router>\r\n\t\t\t\t\t\t<div className=\"app container\">\r\n\t\t\t\t\t\t\t<Header />\r\n\t\t\t\t\t\t\t<RandomPlanet />\r\n\r\n\t\t\t\t\t\t\t<Switch>\r\n\r\n\t\t\t\t\t\t\t\t<Route path='/'\r\n\t\t\t\t\t\t\t\t\t\trender={() => <h2>Welcome to StarDb</h2>}\r\n\t\t\t\t\t\t\t\t\t\texact={true} />\r\n\r\n\t\t\t\t\t\t\t\t<Route path='/people/:page?/:id?/' component={PeoplePage} />\r\n\t\t\t\t\t\t\t\t<Route path='/planets/:page?/:id?/' component={PlanetPage} />\r\n\t\t\t\t\t\t\t\t<Route path='/starships/:page?/:id?/' component={StarshipPage} />\r\n\r\n\t\t\t\t\t\t\t\t{/* <Route \r\n\t\t\t\t\t\t\t\t\tpath='/starships/:id?/details' \r\n\t\t\t\t\t\t\t\t\trender={() => (\r\n\t\t\t\t\t\t\t\t\t\t<LoginPage \r\n\t\t\t\t\t\t\t\t\t\t\tisLoggedIn={isLoggedIn}\r\n\t\t\t\t\t\t\t\t\t\t\tonLogin={ this.onLogin }/>\r\n\t\t\t\t\t\t\t\t\t)} /> */}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Route \r\n\t\t\t\t\t\t\t\t\tpath='/login' \r\n\t\t\t\t\t\t\t\t\trender={() => (\r\n\t\t\t\t\t\t\t\t\t\t<LoginPage \r\n\t\t\t\t\t\t\t\t\t\t\tisLoggedIn={isLoggedIn}\r\n\t\t\t\t\t\t\t\t\t\t\tonLogin={ this.onLogin }/>\r\n\t\t\t\t\t\t\t\t\t)} />\r\n\r\n\t\t\t\t\t\t\t\t<Route \r\n\t\t\t\t\t\t\t\t\tpath='/secret' \r\n\t\t\t\t\t\t\t\t\trender={() => (\r\n\t\t\t\t\t\t\t\t\t\t<SecretPage isLoggedIn={isLoggedIn}/>\r\n\t\t\t\t\t\t\t\t\t)} />\r\n\r\n\t\t\t\t\t\t\t\t<Redirect to ='/'/>\r\n\t\t\t\t\t\t\t\t<Route render ={ ()=> <h1>Page not found</h1> } />\r\n\t\t\t\t\t\t\t</Switch>\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Router>\r\n\t\t\t\t</SwapiServiceProvider>\r\n\t\t\t</ErrorBoundry>\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport App from './components/app';\r\n\r\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}